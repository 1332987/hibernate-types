package com.vladmihalcea.hibernate.type.util;

import org.hibernate.Filter;
import org.hibernate.engine.spi.SessionImplementor;
import org.hibernate.internal.AbstractQueryImpl;

import javax.persistence.Query;
import java.util.Collections;

/**
 * <code>SQLExtractor</code> - Query utilities holder.
 *
 * @author Vlad Mihalcea
 * @since 2.9.11
 */
public class SQLExtractor {

    private SQLExtractor() {
        throw new UnsupportedOperationException("SQLExtractor is not instantiable!");
    }

    /**
     * Get the underlying SQL generated by the provided JPA query.
     *
     * @param query JPA query
     * @return the underlying SQL generated by the provided JPA query
     */
    public static String from(Query query) {
        AbstractQueryImpl abstractQuery = query.unwrap(AbstractQueryImpl.class);
        SessionImplementor session = ReflectionUtils.getFieldValue(abstractQuery, "session");
        String[] sqls = session.getFactory()
            .getQueryPlanCache()
            .getHQLQueryPlan(abstractQuery.getQueryString(), false, Collections.<String, Filter>emptyMap())
            .getSqlStrings();

        return sqls.length > 0 ? sqls[0] : null;
    }
}
